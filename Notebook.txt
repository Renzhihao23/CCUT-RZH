重启window资源管理器  ---  死机
win图标 + 鼠标右键  --- 设备、任务管理器
调整设置 --- 控制面板control
win + v --- 剪截板
vscode 多行注释shift+alt+a      复制当前行到下一行shift+alt+ ↓
1Byte = 8Bit
1KB = 1024Byte
1MB（兆） = 1024KB
1GB（千兆）= 1024MB
1TB = 1024GB
1024 = 2的10次方
%d：打印整形十进制数据
%c：打印字符格式数据
%f：打印浮点（float）型数据
%p：打印地址数据
%x：打印十六进制数据
%s：打印字符串
%lf：打印double数据
%e：以指数形式输出数据
%g：根据大小自动选f格式和e格式，且不输出无意义的零
%o：输出八进制数据
%u：输出无符号十进制数据
%ld：输出长整型
运行库报错  应用程序无法启动等问题    下载运行库 Microsoft 运行库github
services.msc   
window + v打印机服务print等等
char   int8_t       企业实际开发的整形声明：stdint.h
short  int16_t
long long int64_t
unsigned char uint8_t
unsigned short uint16_t
unsigned int uint32_t
unsigned long long uint64_t
%d ->  %zu
const修饰的全局变量叫做全局常量
const修饰的局部变量叫做局部常量
代码区 放机器指令0101010100111
常量区 局部变量和局部常量紧挨在一起
全局区 全局变量，全局常量，静态变量（static）和字符串常量紧挨在一起
栈区 运行速度快，由编译器释放 不要返回局部变量的地址
堆区 很大，找地址很慢，存放动态数组
ptrdiff_t是C/C++标准库中定义的一个与机器相关的数据类型。ptrdiff_t类型变量通常用来保存两个指针减法操作的结果。
数据结构是解决CRUD问题的方法，算法是服务结构的，决定了数据结构的效率



英语听力：1.整体找高频词
                2.划出核心词--实词，能与其他选项做出区分，修饰成分和主体当成一个整体区间词出现后，两三句都没听懂，可以放弃不要了

蒙题技巧：
      1.why not   2.why bother   3.far from   4.little   5.few   6.too..to..
      7.两个选项相似 or 相反，往往正确选项在其中一个
      8.选项均为动词ing或者by+动词ing开头的题目，*重点关注开头的动词
      9.长对话第一题在第一回合
      10.四个选项成为正确单词的概率： 完全照读的>部分照读的
				    集中一句话>分成多句话   
				    不常见单词>常见的单词
				    听到主要成分>听到非主要成分

20个闹钟词
第一类逻辑关系 but well however
第二类举例说明或者事实罗列 ★because   so     ★and     ★for example   in fact
第三类序数词或表顺序的词     first      firstly     finally
第四类情态动词                     have to    had better
第五类特殊重点词                  only       chief       key   now
第六类比较级和最高级           ★more     ★most        best

undecided = not sure
could = be able to
good-looking = handsome
very few = only 2 or 3
us = American
don't understand = difficulty understanding











改进的方案一般有以下内容:
1.替换 backbone.(例如 fasternet，efficientViT...)
2.改进 backbone.(在 backbone 上添加注意力,更换主干模块,例如使用 Fasternet 中的 FasterBlock改进 C2f)
3.替换 neck.(例如 BiFPN 替换 PAFPN.)
4.改进 neck.(改进 neck 中的融合方式，添加注意力...)
5.改进检测头(DyHead，轻量化，解耦头...)
6.改进损失函数.(Focalloss,sildeloss,loU...)
7.模型剪枝、蒸馏。
深度学习实验技巧与实验问题：
1。消融实验应该怎么做?
假如我做了一个 yolov5 的改进，我改进点分别是
实验模型也称为 Baseline，也就是原版 yolov5
实验1: yolow5+mobilenetv2
实验2: yolow5+mobilenetv2+DyHead
实验3：yolov5+mobilenetv2+Dyhead+SimOTA
2.不同模型的对比实验应该怎么做?
在所有实验开始前，先选择部分模型控制好超参数进行跑 baseline,假如我选择了 efficientdeolov5 . yolo7.yolo8. retinane。fcos，假如最高的是 yolov7，那么我可以选择使用 yolov7进行改进，这样就避免在消融实验做完后，上面要求需要增加跟其他模型的对比的时候发现其他模型比改进后的模型精度都要高的情况!
3.消融和对比实验中的超参数设定应该怎么做?
无论是学习率还是 batchsize 还是 epoch 都必须得一致!
4.实验环境，机器的相关问题。
保持实验环境和机器的一致性。
5.随机种子的问题，
一般来说，目前开源的源码基本都已经固定好随机种子，但是某些改进结构的结果可能没办法进行固定，这种情况下有能力可以多跑几次取平均(严询)，没能力的话就跑两三次取最高。
6.消融和对比实验需要放什么指标?最常用: Parm，FLOPs， Size， FPS， Precision， Recall，mAP50，mAP75，mAP50-95 COCO 指标:
7.模块（注意力机制...）对比实验
8.数据集分配问题建议尽量分比例一般为6:2:2或者7:1:2











C++计算机二级考试基本要求
1、掌握C++语言的基本语法规则。
2、熟练掌握有关类与对象的相关知识。
3、能够阅读和分析C++程序。
4、能够采用面向对象的编程思路和方法编写应用程序。
5、能熟练使用Visual C++6.0集成开发环境编写和调试程序。
考试内容
一、C++语言概述
1、了解C++语言的基本符号。
2、了解C++语言的词汇（保留字、标识符、常量、运算符、标点符号等）。
3、掌握C++程序的基本框架（结构程序设计框架、面向对象程序设计框架等）。
4、能够使用Visual C++6.0集成开发环境编辑、编译、运行与调试程序。
二、 数据类型、表达式和基本运算
1、掌握C++数据类型（基本类型，指针类型）及其定义方法。
2、了解C++R常量定义（整型常量，字符常量，逻辑常量，实型常量，地址常量，符号常量）。
3、掌握变量的定义与使用方法（变量的定义及初始化，全局变量，局部变量）。
4、掌握C++运算符的种类、运算优先级和结合性。
5、熟练掌握C++表达式类型及求值规则（赋值运算，算术运算符和算术表达式，关系运算符和关系表达式，逻辑运算和逻辑表达式，条件运算，指针运算，逗号表达式）。
三、 C++的基本语句
1、掌握C++的基本语句，例如赋值语句、表达式语句、复合语句、输入、输出语句和空语句等。
2、用if 语句实现分支结构。
3、用switch语句实现多分支选择结构。
4、用for语句实现循环结构。
5、用while语句实现循环结构。
6、用do……while语句实现循环结构。
7、转向语句（goto,continue,break和return）。
8、掌握分支语句和循环语句的各种嵌套使用。
四、数组、指针与引用
1、掌握一维数组的定义、初始化和访问，了解多维数组的定义、初始化和访问。
2、了解字符串与字符数组。
3、 熟练掌握常用字符串函数（strlen,strcpy,strcat,strcmp,strstr等）。
4、指针与指针变量的概念，指针与地址运算符，指针与数组。
5、引用的基本概念，引用的定义与使用。
五、 掌握函数的有关使用
1、函数的定义方法和调用方法。
2、函数的类型和返回值。
3、形式参数与实在参数，参数值的传递。
4、变量的作用域、生存周期和存储类别（自动，静态，寄存器，外部）。
5、递归函数。
6、函数重载。
7、内联函数。
8、带有缺省参数值的函数。
六、熟练掌握类与对象的相关知识
1、类的定义方式、数据成员、成员函数及访问权限（public,private,protected）。
2、对象和对象指针的定义与使用。
3、构造函数与析构函数。
4、静态数据成员与静态成员函数的定义与使用方式。
5、常数据成员与常成员函数。
6、this指针的使用。
7、友元函数和友元类。
8、对象数组与成员对象。
七、掌握类的继承与派生知识
1、派生类的定义和访问权限。
2、继承基类的数据成员与成员函数。
3、基类指针与派生类指针的使用。
4、虚基类。
八、 了解多态性概念
1、虚函数机制的要点。
2、纯虚函数与抽象基类，虚函数。
3、了解运算符重载。
九、模板
1、简单了解函数模板的定义和使用方式。
2、简单了解类模板的定义和使用方式。
十、 输入输出流
1、掌握C++流的概念。
2、能够使用格式控制数据的输入输出。
3、掌握文件的I/O操作。
考试方式
1、笔试：90分钟，满分100分，其中含公共基础知识部分的30分。
2、上机操作：90分钟，满分100分。
上机操作包括：
（1） 基本操作。
（2） 简单应用。
（3）综合应用


MLP：全连接神经网络属于前馈神经网络（Feedforward Neural Network）的一种。在网络训练过程中，需要通过反向传播算法计算梯度，将误差从输出层反向传播回输入层，用于更新网络参数。这个过程中需要使用反向传播算法来计算梯度，并且在某些类型的神经网络中，例如循环神经网络（RNN），也存在反馈回路。除了MLP，其他常见的前馈神经网络包括卷积神经网络（CNN）和循环神经网络（RNN）等。
MLP是一种由多个神经元组成的前馈神经网络模型。每个神经元接收来自上一层神经元的输出，并通过激活函数进行非线性变换，然后将结果传递给下一层神经元。这种前馈传播的方式使得MLP能够处理复杂的非线性关系。
FFN：他本质上就是一个两层的MLP。
Act：Transformer的优点(长序列信息处理)，提出一种Attentive Convolutional Transformer (ACT) 方法，能够在保留顺序信息的同时有效地捕获本地和全局依赖信息，且加速模型的推理速度
depthwise卷积，只改变feature map的大小，不改变通道数
Pointwise卷积，不改变feature map的大小，只改变通道数
FC:全连接（Fully Connected，FC）
下采样的作用：降维，减少图片尺寸，减轻计算量对卷积得到的Feature MapFeatureMap 进行进一步压缩
上采样的作用:放大图片增加图片的分辨率就是将提取到的Feature Map进行放大， 从而以更高的分辨率进行显示图像。













很少有哪个词像爱一样被庸俗的对待，但爱却可以承载着真正的严肃和崇高
社会中的成功不是竞赛，不是pk而是合作
选计算机作为选题，是因为计算机火；选土木，是因为土木人有苦说不出，整个土木行业现在都已经禁止做自媒体，如果不是大猛子粉丝多，怕影响不好，账号直接关闭；选电子信息是因为电子信息覆盖专业多；选金融是因为金融赚钱的是真赚钱。
而选自动化是为什么，火不如计算机，苦不如土木，赚钱不如金融。
是因为它能在每个时代找到自己的位置。





